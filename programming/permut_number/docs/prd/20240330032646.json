{"Language":"en_us","Programming Language":"Python","Original Requirements":"All submissions for this problem are available.\nA number X is called Permut number if X and 2X ( both without leading zeroes ) have same number of digits and are permutations of each other. Given A and B, find the number of Permut numbers >= A and <= B.\n\nNote : X is called permutation of Y if every digit ( 0 - 9 ) occurs same number of times in both the numbers ( maybe at different positions ).\n\nInput :\n\nThe first line contains the number of test cases T. T lines follow, containing two integers A and B.\n\nOutput :\n\nOutput T lines, one for each test case containing the desired answer for the corresponding test case.\n\nSample Input :\n2\n1 100\n499875921 499875921\n\nSample Output :\n0\n1\n\nConstraints :\n1 <= T <= 10000\n1 <= A <= B <= 10000000000 (10^10)\n\n\n","Project Name":"permut_number","Product Goals":["Create a program that finds the number of Permut numbers >= A and <= B.","Ensure the program is efficient and accurate.","Provide a user-friendly interface for input and output."],"User Stories":["As a user, I want to be able to input two integers, A and B.","As a user, I want the program to find the number of Permut numbers >= A and <= B.","As a user, I want the program to display the result."],"Competitive Analysis":["There are no known competitive products that perform the same function as this program."],"Competitive Quadrant Chart":"quadrantChart\n    title \"Reach and engagement of campaigns\"\n    x-axis \"Low Reach\" --> \"High Reach\"\n    y-axis \"Low Engagement\" --> \"High Engagement\"\n    quadrant-1 \"We should expand\"\n    quadrant-2 \"Need to promote\"\n    quadrant-3 \"Re-evaluate\"\n    quadrant-4 \"May be improved\"\n    \"Campaign A\": [0.3, 0.6]\n    \"Campaign B\": [0.45, 0.23]\n    \"Campaign C\": [0.57, 0.69]\n    \"Campaign D\": [0.78, 0.34]\n    \"Campaign E\": [0.40, 0.34]\n    \"Campaign F\": [0.35, 0.78]\n    \"Our Target Product\": [0.5, 0.6]","Requirement Analysis":"The requirements are clear and concise. The program should be able to find the number of Permut numbers >= A and <= B. The program should be efficient and accurate. The program should provide a user-friendly interface for input and output.","Requirement Pool":[["P0","The program should be able to find the number of Permut numbers >= A and <= B."],["P1","The program should be efficient and accurate."],["P2","The program should provide a user-friendly interface for input and output."]],"UI Design draft":"The program will have a simple command-line interface. The user will be prompted to enter two integers, A and B. The program will then find the number of Permut numbers >= A and <= B and display the result.","Anything UNCLEAR":""}