{"Implementation approach":"We will use a prefix sum approach to efficiently calculate the sum of the matrix for each row and column. Then, for each query, we can subtract the sum of the specified row and column from the total sum to get the sum of the remaining matrix. We can then determine the parity of the sum and output the result.","File list":["main.py"],"Data structures and interfaces":"\nclassDiagram\n    class Matrix:\n        -matrix: List[List[int]]\n        -prefix_sum_rows: List[List[int]]\n        -prefix_sum_cols: List[List[int]]\n        +__init__(matrix: List[List[int]])\n        +get_sum(x1: int, y1: int, x2: int, y2: int) -> int\n        +remove_row_col(x: int, y: int)\n        +get_parity(x: int, y: int) -> str\n","Program call flow":"\nsequenceDiagram\n    participant Main\n    participant Matrix\n    Main->>Matrix: __init__(matrix)\n    loop for each query\n        Main->>Matrix: remove_row_col(x, y)\n        Main->>Matrix: get_parity(x, y)\n        Main-->>Console: print(parity)\n    end\n","Anything UNCLEAR":"None"}