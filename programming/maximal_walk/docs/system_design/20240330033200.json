{"Implementation approach":"We will use the following approach:\n\n1. Read the input and store the values of L and R.\n2. Calculate the maximum possible value of K using the formula K = R - L + 1.\n3. Count the number of different walks with that maximal length using the formula C = (R - L + 1) ^ 2.\n4. Output the values of K and C modulo (109 + 7).","File list":["main.py"],"Data structures and interfaces":"```python\nclass Solution:\n    def __init__(self, l: int, r: int):\n        self.l = l\n        self.r = r\n        self.k = self.r - self.l + 1\n        self.c = pow(self.k, 2, 1000000007)\n\n    def solve(self):\n        print(self.k, self.c)\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        l, r = map(int, input().split())\n        Solution(l, r).solve()\n```","Program call flow":"```sequenceDiagram\nparticipant Solution\nSolution->>Solution: __init__(l, r)\nSolution->>Solution: solve()\n```","Anything UNCLEAR":""}