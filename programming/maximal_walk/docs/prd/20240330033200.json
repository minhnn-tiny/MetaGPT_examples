{"Language":"en_us","Programming Language":"Python","Original Requirements":"All submissions for this problem are available. Read problems statements in Mandarin Chinese  and Russian.\nLet's consider a square matrix of size N × N, where N = R −­­­­­­­­­­­ L + 1. We will enumerate the columns of this matrix with consecutive integers from L to R (the leftmost column will be assigned number L and the rightmost - number R). In similar manner we will enumerate rows with the same integers (the top row will be assigned number L and the bottom row - number R).\nEvery cell of this matrix has an integer written inside it. The cell at the intersection of row X and column Y has integer (X xor Y) written inside.\nTwo cells are called adjacent if and only if they have a common side. That way every inner cell have 4 neighbors and any of four corner cells have 2 neighbors.\nA walk is a sequence of cells C0, C1, C2, ..., CK, where for every 1 ≤ i ≤ K the cells Ci-1 and Ci are adjacent and for every 0 ≤ j ≤ K the number written inside cell Cj is equal j. The number K is the length of that walk.\nYour task is for given L and R values, find the maximal possible value of K, as well as the count C of different walks with that maximal length. As the value of C could be very large, output it modulo (109 + 7).\nInput\nThe first line of the input contains an integer T denoting the number of test cases. \nThe description of T test cases follows. \nFor each test case, the only line of input contains two integers L and R.\nOutput\nFor each test case, output a single line containing two integers K and C. The value of C should be printed modulo (109 + 7).\nConstraints\n\n1 ≤ T ≤ 20 000\n1 ≤ L ≤ R ≤ 1018\n\nSubtasks\n\nSubtask #1: 1 ≤ T ≤ 500; 0 ≤ R - L ≤ 300 (8 points)\nSubtask #2: original constraints, only the value of K will be checked. (24 points)\nSubtask #3: original constraints (68 points)\n\nExample\nInput:\n4\n1 1\n1 2\n1 3\n2 3\n\nOutput:\n0 1\n0 2\n3 4\n1 4\n\nExplanation\nExample case 1. The matrix contains just one cell, so, there is no possibility to make a single move, thus K = 0. We have just one possibility - to start the walk at the only cell and to end it immediately.\nExample case 2. The matrix doesn't contains a cell with number one inside, so, there once again is no possibility to make a single move, thus K = 0. Our walk is just a single cell with number zero inside and there are two such cells, thus C = 2. The matrix in this case looks like this:\n\n(1 xor 1)   (1 xor 2)          =          0 3\n(2 xor 1)   (2 xor 2)          =          3 0\n\nExample case 3. The four possible walks are:\n0 3 2               0 3 2               0 3 2               0 3 2\n3 0 1               3 0 1               3 0 1               3 0 1\n2 1 0               2 1 0               2 1 0               2 1 0\n\nExample case 4. The four possible walks are:\n0 1                   0 1                   0 1                   0 1\n1 0                   1 0                   1 0                   1 0\n\n\n\n","Project Name":"maximal_walk","Product Goals":["Find the maximal possible value of K.","Count the number of different walks with that maximal length.","Output the count modulo (109 + 7)."],"User Stories":["As a user, I want to be able to find the maximal possible value of K for a given L and R.","As a user, I want to be able to count the number of different walks with that maximal length.","As a user, I want to be able to output the count modulo (109 + 7)."],"Competitive Analysis":[],"Competitive Quadrant Chart":"","Requirement Analysis":"The requirements are clear and concise. The problem can be broken down into the following subtasks:\n\n1. Find the maximal possible value of K.\n2. Count the number of different walks with that maximal length.\n3. Output the count modulo (109 + 7).","Requirement Pool":[["P0","Find the maximal possible value of K."],["P0","Count the number of different walks with that maximal length."],["P0","Output the count modulo (109 + 7)."]],"UI Design draft":"","Anything UNCLEAR":""}